# Makefile.in generated by automake 1.11.1 from Makefile.am.
# @configure_input@

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005, 2006, 2007, 2008, 2009  Free Software Foundation,
# Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@

VPATH = @srcdir@
pkgdatadir = $(datadir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkglibexecdir = $(libexecdir)/@PACKAGE@
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
check_PROGRAMS = decbufr$(EXEEXT) build-composite$(EXEEXT) \
	build-compo-cumul$(EXEEXT) build-local$(EXEEXT) \
	build-cumul$(EXEEXT) build-wrwp$(EXEEXT) \
	build-wrwp-OMM$(EXEEXT) build-polar$(EXEEXT) \
	build-antilles$(EXEEXT) build-odim-polar$(EXEEXT) \
	bufr2hdf5$(EXEEXT) hdf2bufr$(EXEEXT) build-odim-compo$(EXEEXT) \
	comp2hdf5$(EXEEXT) hdf2comp$(EXEEXT) pdh2comp$(EXEEXT)
subdir = tests
DIST_COMMON = $(noinst_HEADERS) $(srcdir)/Makefile.am \
	$(srcdir)/Makefile.in
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/lib/config.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
am_bufr2hdf5_OBJECTS = bufr2hdf5.$(OBJEXT) odim.$(OBJEXT)
bufr2hdf5_OBJECTS = $(am_bufr2hdf5_OBJECTS)
bufr2hdf5_LDADD = $(LDADD)
bufr2hdf5_DEPENDENCIES = ../lib/libOperaBufr.a
build_antilles_SOURCES = build-antilles.c
build_antilles_OBJECTS = build-antilles.$(OBJEXT)
build_antilles_LDADD = $(LDADD)
build_antilles_DEPENDENCIES = ../lib/libOperaBufr.a
build_compo_cumul_SOURCES = build-compo-cumul.c
build_compo_cumul_OBJECTS = build-compo-cumul.$(OBJEXT)
build_compo_cumul_LDADD = $(LDADD)
build_compo_cumul_DEPENDENCIES = ../lib/libOperaBufr.a
build_composite_SOURCES = build-composite.c
build_composite_OBJECTS = build-composite.$(OBJEXT)
build_composite_LDADD = $(LDADD)
build_composite_DEPENDENCIES = ../lib/libOperaBufr.a
build_cumul_SOURCES = build-cumul.c
build_cumul_OBJECTS = build-cumul.$(OBJEXT)
build_cumul_LDADD = $(LDADD)
build_cumul_DEPENDENCIES = ../lib/libOperaBufr.a
build_local_SOURCES = build-local.c
build_local_OBJECTS = build-local.$(OBJEXT)
build_local_LDADD = $(LDADD)
build_local_DEPENDENCIES = ../lib/libOperaBufr.a
build_odim_compo_SOURCES = build-odim-compo.c
build_odim_compo_OBJECTS = build-odim-compo.$(OBJEXT)
build_odim_compo_LDADD = $(LDADD)
build_odim_compo_DEPENDENCIES = ../lib/libOperaBufr.a
build_odim_polar_SOURCES = build-odim-polar.c
build_odim_polar_OBJECTS = build-odim-polar.$(OBJEXT)
build_odim_polar_LDADD = $(LDADD)
build_odim_polar_DEPENDENCIES = ../lib/libOperaBufr.a
build_polar_SOURCES = build-polar.c
build_polar_OBJECTS = build-polar.$(OBJEXT)
build_polar_LDADD = $(LDADD)
build_polar_DEPENDENCIES = ../lib/libOperaBufr.a
build_wrwp_SOURCES = build-wrwp.c
build_wrwp_OBJECTS = build-wrwp.$(OBJEXT)
build_wrwp_LDADD = $(LDADD)
build_wrwp_DEPENDENCIES = ../lib/libOperaBufr.a
build_wrwp_OMM_SOURCES = build-wrwp-OMM.c
build_wrwp_OMM_OBJECTS = build-wrwp-OMM.$(OBJEXT)
build_wrwp_OMM_LDADD = $(LDADD)
build_wrwp_OMM_DEPENDENCIES = ../lib/libOperaBufr.a
comp2hdf5_SOURCES = comp2hdf5.c
comp2hdf5_OBJECTS = comp2hdf5.$(OBJEXT)
comp2hdf5_LDADD = $(LDADD)
comp2hdf5_DEPENDENCIES = ../lib/libOperaBufr.a
decbufr_SOURCES = decbufr.c
decbufr_OBJECTS = decbufr.$(OBJEXT)
decbufr_LDADD = $(LDADD)
decbufr_DEPENDENCIES = ../lib/libOperaBufr.a
hdf2bufr_SOURCES = hdf2bufr.c
hdf2bufr_OBJECTS = hdf2bufr.$(OBJEXT)
hdf2bufr_LDADD = $(LDADD)
hdf2bufr_DEPENDENCIES = ../lib/libOperaBufr.a
hdf2comp_SOURCES = hdf2comp.c
hdf2comp_OBJECTS = hdf2comp.$(OBJEXT)
hdf2comp_LDADD = $(LDADD)
hdf2comp_DEPENDENCIES = ../lib/libOperaBufr.a
pdh2comp_SOURCES = pdh2comp.c
pdh2comp_OBJECTS = pdh2comp.$(OBJEXT)
pdh2comp_LDADD = $(LDADD)
pdh2comp_DEPENDENCIES = ../lib/libOperaBufr.a
DEFAULT_INCLUDES = -I.@am__isrc@ -I$(top_builddir)/lib
depcomp =
am__depfiles_maybe =
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
SOURCES = $(bufr2hdf5_SOURCES) build-antilles.c build-compo-cumul.c \
	build-composite.c build-cumul.c build-local.c \
	build-odim-compo.c build-odim-polar.c build-polar.c \
	build-wrwp.c build-wrwp-OMM.c comp2hdf5.c decbufr.c hdf2bufr.c \
	hdf2comp.c pdh2comp.c
DIST_SOURCES = $(bufr2hdf5_SOURCES) build-antilles.c \
	build-compo-cumul.c build-composite.c build-cumul.c \
	build-local.c build-odim-compo.c build-odim-polar.c \
	build-polar.c build-wrwp.c build-wrwp-OMM.c comp2hdf5.c \
	decbufr.c hdf2bufr.c hdf2comp.c pdh2comp.c
HEADERS = $(noinst_HEADERS)
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = @ACLOCAL@
AMTAR = @AMTAR@
AUTOCONF = @AUTOCONF@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
CC = @CC@
CFLAGS = @CFLAGS@
CPP = @CPP@
CPPFLAGS = @CPPFLAGS@
CYGPATH_W = @CYGPATH_W@
DEFS = @DEFS@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EGREP = @EGREP@
EXEEXT = @EXEEXT@
GREP = @GREP@
INSTALL = @INSTALL@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
LDFLAGS = @LDFLAGS@
LIBOBJS = @LIBOBJS@
LIBS = @LIBS@
LTLIBOBJS = @LTLIBOBJS@
MACHDEP = @MACHDEP@
MAKEINFO = @MAKEINFO@
MKDIR_P = @MKDIR_P@
OBJEXT = @OBJEXT@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_URL = @PACKAGE_URL@
PACKAGE_VERSION = @PACKAGE_VERSION@
PATH_SEPARATOR = @PATH_SEPARATOR@
RANLIB = @RANLIB@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
STRIP = @STRIP@
VERSION = @VERSION@
abs_builddir = @abs_builddir@
abs_srcdir = @abs_srcdir@
abs_top_builddir = @abs_top_builddir@
abs_top_srcdir = @abs_top_srcdir@
ac_ct_CC = @ac_ct_CC@
am__leading_dot = @am__leading_dot@
am__tar = @am__tar@
am__untar = @am__untar@
bindir = @bindir@
build_alias = @build_alias@
builddir = @builddir@
datadir = @datadir@
datarootdir = @datarootdir@
docdir = @docdir@
dvidir = @dvidir@
exec_prefix = @exec_prefix@
host_alias = @host_alias@
htmldir = @htmldir@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
libdir = @libdir@
libexecdir = @libexecdir@
localedir = @localedir@
localstatedir = @localstatedir@
mandir = @mandir@
mkdir_p = @mkdir_p@
oldincludedir = @oldincludedir@
pdfdir = @pdfdir@
prefix = @prefix@
program_transform_name = @program_transform_name@
psdir = @psdir@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
srcdir = @srcdir@
sysconfdir = @sysconfdir@
target_alias = @target_alias@
top_build_prefix = @top_build_prefix@
top_builddir = @top_builddir@
top_srcdir = @top_srcdir@
noinst_HEADERS = radar.h polar.h odim.h compo.h
bufr2hdf5_SOURCES = bufr2hdf5.c odim.c
LDADD = ../lib/libOperaBufr.a
REF = -ref
REFERENCES = composite$(REF).bfr cumul$(REF).bfr local$(REF).bfr wrwp-opera$(REF).bfr wrwp-OMM$(REF).bfr \
	polar$(REF).bfr antilles-CMO$(REF).bfr compo-cumul$(REF).bfr odim-polar$(REF).bfr odim-compo$(REF).bfr

EXTRA_DIST = $(REFERENCES) \
	french-200010301300.bfr french-cumul-200605180605.bfr cumul-abbeville-200512271800.bfr \
	polar-20040619.bfr abbeville-200512271800.bfr wrwp-wmo.bfr antilles.bfr \
	200906150321_t1 200906150323_t2 200906150325_t3 RAD_NL60_VOL_OP_200705211200.h5 \
	Euroc_200911291715.bfr

all: all-am

.SUFFIXES:
.SUFFIXES: .c .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign --ignore-deps tests/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --foreign --ignore-deps tests/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):

clean-checkPROGRAMS:
	-test -z "$(check_PROGRAMS)" || rm -f $(check_PROGRAMS)
bufr2hdf5$(EXEEXT): $(bufr2hdf5_OBJECTS) $(bufr2hdf5_DEPENDENCIES) 
	@rm -f bufr2hdf5$(EXEEXT)
	$(LINK) $(bufr2hdf5_OBJECTS) $(bufr2hdf5_LDADD) $(LIBS)
build-antilles$(EXEEXT): $(build_antilles_OBJECTS) $(build_antilles_DEPENDENCIES) 
	@rm -f build-antilles$(EXEEXT)
	$(LINK) $(build_antilles_OBJECTS) $(build_antilles_LDADD) $(LIBS)
build-compo-cumul$(EXEEXT): $(build_compo_cumul_OBJECTS) $(build_compo_cumul_DEPENDENCIES) 
	@rm -f build-compo-cumul$(EXEEXT)
	$(LINK) $(build_compo_cumul_OBJECTS) $(build_compo_cumul_LDADD) $(LIBS)
build-composite$(EXEEXT): $(build_composite_OBJECTS) $(build_composite_DEPENDENCIES) 
	@rm -f build-composite$(EXEEXT)
	$(LINK) $(build_composite_OBJECTS) $(build_composite_LDADD) $(LIBS)
build-cumul$(EXEEXT): $(build_cumul_OBJECTS) $(build_cumul_DEPENDENCIES) 
	@rm -f build-cumul$(EXEEXT)
	$(LINK) $(build_cumul_OBJECTS) $(build_cumul_LDADD) $(LIBS)
build-local$(EXEEXT): $(build_local_OBJECTS) $(build_local_DEPENDENCIES) 
	@rm -f build-local$(EXEEXT)
	$(LINK) $(build_local_OBJECTS) $(build_local_LDADD) $(LIBS)
build-odim-compo$(EXEEXT): $(build_odim_compo_OBJECTS) $(build_odim_compo_DEPENDENCIES) 
	@rm -f build-odim-compo$(EXEEXT)
	$(LINK) $(build_odim_compo_OBJECTS) $(build_odim_compo_LDADD) $(LIBS)
build-odim-polar$(EXEEXT): $(build_odim_polar_OBJECTS) $(build_odim_polar_DEPENDENCIES) 
	@rm -f build-odim-polar$(EXEEXT)
	$(LINK) $(build_odim_polar_OBJECTS) $(build_odim_polar_LDADD) $(LIBS)
build-polar$(EXEEXT): $(build_polar_OBJECTS) $(build_polar_DEPENDENCIES) 
	@rm -f build-polar$(EXEEXT)
	$(LINK) $(build_polar_OBJECTS) $(build_polar_LDADD) $(LIBS)
build-wrwp$(EXEEXT): $(build_wrwp_OBJECTS) $(build_wrwp_DEPENDENCIES) 
	@rm -f build-wrwp$(EXEEXT)
	$(LINK) $(build_wrwp_OBJECTS) $(build_wrwp_LDADD) $(LIBS)
build-wrwp-OMM$(EXEEXT): $(build_wrwp_OMM_OBJECTS) $(build_wrwp_OMM_DEPENDENCIES) 
	@rm -f build-wrwp-OMM$(EXEEXT)
	$(LINK) $(build_wrwp_OMM_OBJECTS) $(build_wrwp_OMM_LDADD) $(LIBS)
comp2hdf5$(EXEEXT): $(comp2hdf5_OBJECTS) $(comp2hdf5_DEPENDENCIES) 
	@rm -f comp2hdf5$(EXEEXT)
	$(LINK) $(comp2hdf5_OBJECTS) $(comp2hdf5_LDADD) $(LIBS)
decbufr$(EXEEXT): $(decbufr_OBJECTS) $(decbufr_DEPENDENCIES) 
	@rm -f decbufr$(EXEEXT)
	$(LINK) $(decbufr_OBJECTS) $(decbufr_LDADD) $(LIBS)
hdf2bufr$(EXEEXT): $(hdf2bufr_OBJECTS) $(hdf2bufr_DEPENDENCIES) 
	@rm -f hdf2bufr$(EXEEXT)
	$(LINK) $(hdf2bufr_OBJECTS) $(hdf2bufr_LDADD) $(LIBS)
hdf2comp$(EXEEXT): $(hdf2comp_OBJECTS) $(hdf2comp_DEPENDENCIES) 
	@rm -f hdf2comp$(EXEEXT)
	$(LINK) $(hdf2comp_OBJECTS) $(hdf2comp_LDADD) $(LIBS)
pdh2comp$(EXEEXT): $(pdh2comp_OBJECTS) $(pdh2comp_DEPENDENCIES) 
	@rm -f pdh2comp$(EXEEXT)
	$(LINK) $(pdh2comp_OBJECTS) $(pdh2comp_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

.c.o:
	$(COMPILE) -c $<

.c.obj:
	$(COMPILE) -c `$(CYGPATH_W) '$<'`

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	set x; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
	$(MAKE) $(AM_MAKEFLAGS) $(check_PROGRAMS)
check: check-am
all-am: Makefile $(HEADERS)
installdirs:
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-checkPROGRAMS clean-generic mostlyclean-am

distclean: distclean-am
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am:

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am:

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am:

.MAKE: check-am install-am install-strip

.PHONY: CTAGS GTAGS all all-am check check-am clean \
	clean-checkPROGRAMS clean-generic ctags distclean \
	distclean-compile distclean-generic distclean-tags distdir dvi \
	dvi-am html html-am info info-am install install-am \
	install-data install-data-am install-dvi install-dvi-am \
	install-exec install-exec-am install-html install-html-am \
	install-info install-info-am install-man install-pdf \
	install-pdf-am install-ps install-ps-am install-strip \
	installcheck installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic pdf pdf-am ps ps-am tags uninstall \
	uninstall-am


check: 
	./build-compo-cumul -d ../tables french-cumul-200605180605.bfr compo-cumul.bfr 2>log 
	(cmp compo-cumul.bfr compo-cumul$(REF).bfr && echo "PASS compo-cumul") || echo "FAIL compo-cumul"
	./build-composite -d ../tables french-200010301300.bfr composite.bfr 2>>log 
	(cmp composite.bfr composite$(REF).bfr && echo "PASS composite") || echo "FAIL composite"
	./build-local -d ../tables abbeville-200512271800.bfr local.bfr 2>>log 
	(cmp local.bfr local$(REF).bfr && echo "PASS local") || echo "FAIL local"
	./build-cumul -d ../tables cumul-abbeville-200512271800.bfr cumul.bfr 2>>log 
	(cmp cumul.bfr cumul$(REF).bfr && echo "PASS cumul") || echo "FAIL cumul"
	./build-wrwp -d ../tables wrwp-wmo.bfr wrwp-opera.bfr 2>>log 
	(cmp wrwp-opera.bfr wrwp-opera$(REF).bfr && echo "PASS wrwp-opera") || echo "FAIL wrwp-opera"
	./build-wrwp-OMM -d ../tables wrwp-wmo.bfr wrwp-OMM.bfr 2>>log 
	(cmp wrwp-OMM.bfr wrwp-OMM$(REF).bfr && echo "PASS wrwp-OMM") || echo "FAIL wrwp-OMM"
	./build-polar -d ../tables polar-20040619.bfr polar.bfr 2>>log 
	(cmp polar.bfr polar$(REF).bfr && echo "PASS polar") || echo "FAIL polar"
	./build-antilles -d ../tables antilles.bfr antilles-CMO.bfr 2>>log
	(cmp antilles-CMO.bfr antilles-CMO$(REF).bfr && echo "PASS antilles-CMO") || echo "FAIL antilles-CMO"

odim: build-odim-polar
	./build-odim-polar -d ../tables 200906150321_t1 200906150323_t2 200906150325_t3 odim-polar.bfr 2>log 
	(cmp odim-polar.bfr odim-polar$(REF).bfr && echo "PASS odim-polar") || echo "FAIL odim-polar"
bufr2hdf: bufr2hdf5
	./bufr2hdf5 -d ../tables odim-polar.bfr odim-polar.hdf5
hdf2bfr: hdf2bufr
	./hdf2bufr -d ../tables odim-polar.hdf5 odim-polar.bfr2

odim2: bufr2hdf5 hdf2bufr
	./hdf2bufr -d ../tables RAD_NL60_VOL_OP_200705211200.h5 odim-suede.bfr
	./bufr2hdf5 -d ../tables odim-suede.bfr odim-suede.h5
	./hdf2bufr -d ../tables odim-suede.h5 odim-suede.bfr2
	(cmp odim-suede.bfr odim-suede.bfr2 && echo "PASS odim-suede") || echo "FAIL odim-suede"

compo: build-odim-compo
	./build-odim-compo -d ../tables Euroc_200911291715.bfr odim-compo.bfr 2>log 
	(cmp odim-compo.bfr odim-compo$(REF).bfr && echo "PASS odim-compo") || echo "FAIL odim-compo"
comp2hdf: comp2hdf5
	./comp2hdf5 -d ../tables odim-compo.bfr odim-compo.hdf5
hdf2com: hdf2comp
	./hdf2comp -d ../tables odim-compo.hdf5 odim-compo.bfr2

idempotent: odim compo bufr2hdf hdf2bfr comp2hdf hdf2com odim2
	(cmp odim-polar.bfr odim-polar.bfr2 && echo "PASS idem odim-polar") || echo "FAIL idem odim-polar"
	(cmp odim-compo.bfr odim-compo.bfr2 && echo "PASS idem odim-compo") || echo "FAIL idem odim-compo"

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
